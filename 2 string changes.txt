class Solution {
public:
    int minSteps(string s, string t) {
        int count[26] = {0};
        // Storing the difference of frequencies of characters in t and s.
        for (int i = 0; i < s.size(); i++) {
            count[t[i] - 'a']++;
            count[s[i] - 'a']--;
        }

        int ans = 0;
        for (int i = 0; i < 26; i++) {
            ans += max(0, count[i]);
        }
        
        return ans;
    }
};

hhhhhhhhhhhhhh my sub
class Solution {
public:
    int minSteps(string s, string t) {
        unordered_map<char,int>firstString;
        unordered_map<char,int>secondString;
        int size = s.size();
        for(int i =0;i<size;i++){ 
            if(!secondString[s[i]]) {
                   secondString[s[i]]=0;
            }
               firstString[s[i]]++; 
               secondString[t[i]]++;
          
            
        }
        int result=0;
        unordered_map<char,int>::iterator it;
          for(it=firstString.begin();it!=firstString.end();it++){
              if(it->second>secondString[it->first]){
                  result+=it->second-secondString[it->first];
              }
          }
        return result;
    }
};