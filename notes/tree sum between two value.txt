class Solution {
public:
    int rangeSumBST(TreeNode* root, int low, int high) {
        if(root == nullptr) return 0;
        if(root->val<low)return rangeSumBST(root->right,low,high);
         if(root->val>high)return rangeSumBST(root->left,low,high);
        return root->val+rangeSumBST(root->left,low,high)+rangeSumBST(root->right,low,high);
    }
};

ok the left alwys smaller then the right(node) so 
if root val is smaller then lower we go right to get a bigger value
and vis versa 
so if we found a value we add it to the recursion left and right
base case = nullptr return 0